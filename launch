#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import logging
##

from sima import core
from sima.plugins.crop import Crop
from sima.lib.logger import set_logger
from sima.utils.config import ConfMan
from sima.utils.startopt import StartOpt
from sima.utils.utils import exception_log
##


def main():
    """Entry point, deal w/ CLI and starts application
    """
    info = dict({'version': core.__version__,})
    # StartOpt gathers options from command line call (in StartOpt().options)
    sopt = StartOpt(info)
    # set logger
    set_logger(level='debug')
    logger = logging.getLogger('sima')
    cli_loglevel = getattr(logging,
                           sopt.options.get('verbosity', 'warning').upper())
    logger.setLevel(cli_loglevel)
    # loads configuration
    conf_manager = ConfMan(logger, sopt.options)
    config = conf_manager.config
    logger.setLevel(getattr(logging,
                    config.get('log', 'verbosity').upper()))  # pylint: disable=E1103

    logger.debug('Command line say: {0}'.format(sopt.options))
    logger.info('Starting...')
    sima = core.Sima()
    sima.register_plugin(Crop)
    try:
        sima.run()
    except KeyboardInterrupt:
        logger.info('Caught KeyboardInterrupt, stopping')
        sima.shutdown()


# Script starts here
if __name__ == '__main__':
    # pylint: disable=broad-except
    try:
        main()
    except Exception:
        exception_log()


# VIM MODLINE
# vim: ai ts=4 sw=4 sts=4 expandtab
